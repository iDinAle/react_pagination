{"version":3,"sources":["components/TabsList.js","components/PageButton.js","components/Pagination.js","App.js","index.js"],"names":["TabsList","_ref","tabs","react_default","a","createElement","className","map","_ref2","title","content","key","PageButton","onSwitch","children","type","onClick","Pagination","totalItemsAmount","itemsPerPage","currentPage","onSwitchPage","firstItem","lastItem","pagesAmount","Math","ceil","pageButtons","amount","result","i","push","genereatePageButtons","firstPage","lastPage","length","preCurrentPage","postCurrentPage","lastItemOnPage","disabled","page","components_PageButton","concat","options","App","state","switchPage","newPage","_this","setState","changeItemsPerPage","event","target","value","_this$state","this","generateTabs","firstTab","lastTab","visibleTabs","filter","_","index","onChange","option","components_Pagination","components_TabsList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c493a153.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabsList = ({ tabs }) => (\n  <ol className=\"tabs\">\n    {tabs.map(({ title, content }) => (\n      <li key={title}>\n        <h3 className=\"tabs__title\">{title}</h3>\n        <p className=\"tabs__content\">{content}</p>\n      </li>\n    ))}\n  </ol>\n);\n\nTabsList.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string)\n  ).isRequired,\n};\n\nexport default TabsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageButton = ({ onSwitch, children }) => (\n  <button\n    className=\"paginator__button\"\n    type=\"button\"\n    key={children}\n    onClick={onSwitch}\n  >\n    {children}\n  </button>\n);\n\nPageButton.propTypes = {\n  onSwitch: PropTypes.func.isRequired,\n  children: PropTypes.number.isRequired,\n};\n\nexport default PageButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageButton from './PageButton';\n\nconst genereatePageButtons = (amount) => {\n  const result = [];\n\n  for (let i = 1; i <= amount; i += 1) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nconst Pagination = ({\n  totalItemsAmount,\n  itemsPerPage,\n  currentPage,\n  onSwitchPage,\n  firstItem,\n  lastItem,\n}) => {\n  const pagesAmount = Math.ceil(totalItemsAmount / itemsPerPage);\n  const pageButtons = genereatePageButtons(pagesAmount);\n  const firstPage = pageButtons[0];\n  const lastPage = pageButtons[pageButtons.length - 1];\n  const preCurrentPage = currentPage - 1;\n  const postCurrentPage = currentPage + 1;\n  const lastItemOnPage = lastItem > totalItemsAmount\n    ? totalItemsAmount\n    : lastItem;\n\n  return (\n    <div className=\"paginator\">\n      <button\n        className=\"paginator__prev-btn\"\n        type=\"button\"\n        onClick={() => onSwitchPage(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        Previous\n      </button>\n\n      {pageButtons.map((page) => {\n        if (page === firstPage || page === lastPage) {\n          if (page === currentPage) {\n            return (\n              <PageButton\n                onSwitch={() => onSwitchPage(page)}\n                page={page}\n              >\n                {`<${page}>`}\n              </PageButton>\n            );\n          }\n\n          return (\n            <PageButton\n              onSwitch={() => onSwitchPage(page)}\n              page={page}\n            >\n              {page}\n            </PageButton>\n          );\n        }\n\n        if (page === currentPage) {\n          return (\n            <PageButton\n              onSwitch={() => onSwitchPage(page)}\n              page={page}\n            >\n              {`<${page}>`}\n            </PageButton>\n          );\n        }\n\n        if (page === preCurrentPage) {\n          if (page === firstPage + 1) {\n            return (\n              <PageButton\n                onSwitch={() => onSwitchPage(page)}\n                page={page}\n              >\n                {page}\n              </PageButton>\n            );\n          }\n\n          return (\n            <PageButton\n              onSwitch={() => onSwitchPage(page)}\n              page={page}\n            >\n              {`...${page}`}\n            </PageButton>\n          );\n        }\n\n        if (page === postCurrentPage) {\n          if (page === lastPage - 1) {\n            return (\n              <PageButton\n                onSwitch={() => onSwitchPage(page)}\n                page={page}\n              >\n                {page}\n              </PageButton>\n            );\n          }\n\n          return (\n            <PageButton\n              onSwitch={() => onSwitchPage(page)}\n              page={page}\n            >\n              {`${page}...`}\n            </PageButton>\n          );\n        }\n\n        return '';\n      })}\n\n      <button\n        className=\"paginator__prev-btn\"\n        type=\"button\"\n        onClick={() => onSwitchPage(currentPage + 1)}\n        disabled={currentPage === pagesAmount}\n      >\n        Next\n      </button>\n\n      <p>\n        {`Items: from ${firstItem} to ${lastItemOnPage} of ${totalItemsAmount}`}\n      </p>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  totalItemsAmount: PropTypes.number.isRequired,\n  itemsPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  firstItem: PropTypes.number.isRequired,\n  lastItem: PropTypes.number.isRequired,\n  onSwitchPage: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.scss';\nimport TabsList from './components/TabsList';\nimport Pagination from './components/Pagination';\n\nconst options = [1, 2, 3, 5, 10, 20];\n\nconst generateTabs = (amount) => {\n  const result = [];\n\n  for (let i = 1; i <= amount; i += 1) {\n    result.push({\n      title: `Tab ${i}`,\n      content: `Some text ${i}`,\n    });\n  }\n\n  return result;\n};\n\nclass App extends React.Component {\n  state = {\n    page: 1,\n    itemsPerPage: 1,\n  };\n\n  switchPage = (newPage) => {\n    this.setState({\n      page: newPage,\n    });\n  };\n\n  changeItemsPerPage = (event) => {\n    this.setState({\n      itemsPerPage: +event.target.value,\n      page: 1,\n    });\n  }\n\n  render() {\n    const { page, itemsPerPage } = this.state;\n    const tabs = generateTabs(95);\n    const firstTab = (page - 1) * itemsPerPage + 1;\n    const lastTab = page * itemsPerPage;\n    const visibleTabs = tabs.filter(\n      (_, index) => index >= firstTab - 1 && index < lastTab\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"main-title\">\n          {`${tabs.length} tabs`}\n        </h1>\n\n        <div>\n          Items per page: &nbsp;\n\n          <select\n            onChange={this.changeItemsPerPage}\n            className=\"select-pages\"\n          >\n            {options.map(option => (\n              <option\n                value={option}\n                key={option}\n                className=\"select-pages__option\"\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n\n          <p>{`Current page: ${page}`}</p>\n        </div>\n\n        <Pagination\n          totalItemsAmount={tabs.length}\n          itemsPerPage={itemsPerPage}\n          currentPage={page}\n          onSwitchPage={this.switchPage}\n          firstItem={firstTab}\n          lastItem={lastTab}\n        />\n\n        <TabsList\n          tabs={visibleTabs}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}